{"version":3,"file":"ng2-adsk-forge-viewer.js","sources":["../out-tsc/lib/src/extensions/extension.ts","../out-tsc/lib/src/extensions/basic-extension.ts","../out-tsc/lib/src/service/script.service.ts","../out-tsc/lib/src/component/viewer.component.ts","../out-tsc/lib/src/component/thumbnail.component.ts","../out-tsc/lib/src/module.ts","../out-tsc/lib/index.ts","../out-tsc/lib/ng2-adsk-forge-viewer.ts"],"sourcesContent":["export abstract class ViewerEventArgs {\n  target?: Autodesk.Viewing.Viewer3D;\n  model?: Autodesk.Viewing.ViewerItem;\n  type: string;\n  [key: string]: any;\n}\nexport class AggregationSelectionChangedEventArgs extends ViewerEventArgs {\n  selections: Autodesk.Viewing.ViewerItem[];\n  type = Autodesk.Viewing.AGGREGATE_SELECTION_CHANGED_EVENT;\n}\nexport class AnimationReadyEventArgs extends ViewerEventArgs {\n  type = Autodesk.Viewing.ANIMATION_READY_EVENT;\n}\nexport class CameraChangedEventArgs extends ViewerEventArgs {\n  camera: THREE.Camera;\n  type = Autodesk.Viewing.CAMERA_CHANGE_EVENT;\n}\nexport class CutplanesChangedEventArgs extends ViewerEventArgs {\n  cutplanes: Object[];\n  type = Autodesk.Viewing.CUTPLANES_CHANGE_EVENT;\n}\nexport class EscapeEventArgs extends ViewerEventArgs {\n  type = Autodesk.Viewing.ESCAPE_EVENT;\n}\nexport class ExplodeChangedEventArgs extends ViewerEventArgs {\n  scale: number;\n  type = Autodesk.Viewing.EXPLODE_CHANGE_EVENT;\n}\nexport abstract class ExtensionLoadedUnloadedEventArgs extends ViewerEventArgs {\n  extensionId: string;\n}\nexport class ExtensionLoadedEventArgs extends ExtensionLoadedUnloadedEventArgs {\n  type = Autodesk.Viewing.EXTENSION_LOADED_EVENT;\n}\nexport class ExtensionUnloadedEventArgs extends ExtensionLoadedUnloadedEventArgs {\n  type = Autodesk.Viewing.EXTENSION_UNLOADED_EVENT;\n}\nexport class FinalFrameRenderedChangedEventArgs extends ViewerEventArgs {\n  planes: Object[];\n  type = Autodesk.Viewing.FINAL_FRAME_RENDERED_CHANGED_EVENT;\n}\nexport class FitToViewEventArgs extends ViewerEventArgs {\n  immediate: boolean;\n  nodeIdArray: number[];\n  type = Autodesk.Viewing.FIT_TO_VIEW_EVENT;\n}\nexport class FragmentsLoadedEventArgs extends ViewerEventArgs {\n  getFragIds: () => void;\n  data: Object;\n  type = Autodesk.Viewing.FRAGMENTS_LOADED_EVENT;\n}\nexport class FullscreenEventArgs extends ViewerEventArgs {\n  mode: Autodesk.Viewing.ScreenMode;\n  type = Autodesk.Viewing.FULLSCREEN_MODE_EVENT;\n}\nexport class GeometryLoadedEventArgs extends ViewerEventArgs {\n  type = Autodesk.Viewing.GEOMETRY_LOADED_EVENT;\n}\nexport class HideEventArgs extends ViewerEventArgs {\n  nodeIdArray: number[];\n  type = Autodesk.Viewing.HIDE_EVENT;\n}\nexport class HyperlinkEventArgs extends ViewerEventArgs {\n  data: Object; // TODO: Can his be stronger?\n  type = Autodesk.Viewing.HYPERLINK_EVENT;\n}\nexport class IsolateEventArgs extends ViewerEventArgs {\n  nodeIdArray: number[];\n  type = Autodesk.Viewing.ISOLATE_EVENT;\n}\nexport class LayerVisibilityEventArgs extends ViewerEventArgs {\n  type = Autodesk.Viewing.LAYER_VISIBILITY_CHANGED_EVENT;\n}\nexport class LoadMissingGeometryEventArgs extends ViewerEventArgs {\n  delay: boolean;\n  type = Autodesk.Viewing.LOAD_MISSING_GEOMETRY;\n}\nexport class ModelRootLoadedEventArgs extends ViewerEventArgs {\n  svf: Object; // TODO: can this be stronger\n  type = Autodesk.Viewing.MODEL_ROOT_LOADED_EVENT;\n}\nexport class ModelUnloadedEventArgs extends ViewerEventArgs {\n  type = Autodesk.Viewing.MODEL_UNLOADED_EVENT;\n}\nexport class NavigationModeChangedEventArgs extends ViewerEventArgs {\n  id: string;\n  type = Autodesk.Viewing.NAVIGATION_MODE_CHANGED_EVENT;\n}\nexport abstract class ObjectTreeEventArgs extends ViewerEventArgs {\n  svf: Object; // TODO: can this be stronger\n}\nexport class ObjectTreeCreatedEventArgs extends ObjectTreeEventArgs {\n  type = Autodesk.Viewing.OBJECT_TREE_CREATED_EVENT;\n}\nexport class ObjectTreeUnavailableEventArgs extends ObjectTreeEventArgs {\n  type = Autodesk.Viewing.OBJECT_TREE_UNAVAILABLE_EVENT;\n}\nexport abstract class PrefEventArgs extends ViewerEventArgs {\n  name: string;\n  value: Object;\n}\nexport class PrefChangedEventArgs extends PrefEventArgs {\n  type = Autodesk.Viewing.PREF_CHANGED_EVENT;\n}\nexport class PrefResetEventArgs extends PrefEventArgs {\n  type = Autodesk.Viewing.PREF_RESET_EVENT;\n}\nexport class ProgressUpdateEventArgs extends ViewerEventArgs {\n  percent: number;\n  state: Autodesk.Viewing.ProgressState;\n  type = Autodesk.Viewing.PROGRESS_UPDATE_EVENT;\n}\nexport class RenderOptionChangedEventArgs extends ViewerEventArgs {\n  type = Autodesk.Viewing.RENDER_OPTION_CHANGED_EVENT;\n}\nexport class RenderPresentedEventArgs extends ViewerEventArgs {\n  type = Autodesk.Viewing.RENDER_PRESENTED_EVENT;\n}\nexport class ResetEventArgs extends ViewerEventArgs {\n  type = Autodesk.Viewing.RESET_EVENT;\n}\nexport class RestoreDefaultSettingsEventArgs extends ViewerEventArgs {\n  type = Autodesk.Viewing.RESTORE_DEFAULT_SETTINGS_EVENT;\n}\nexport class SelectionChangedEventArgs extends ViewerEventArgs {\n  fragIdsArray: number[];\n  dbIdArray: number[];\n  nodeArray: number[];\n  type = Autodesk.Viewing.SELECTION_CHANGED_EVENT;\n}\nexport class ShowEventArgs extends ViewerEventArgs {\n  nodeArrayId: number[];\n  type = Autodesk.Viewing.SHOW_EVENT;\n}\nexport class TexturesLoadedEventArgs extends ViewerEventArgs {\n  type = Autodesk.Viewing.TEXTURES_LOADED_EVENT;\n}\nexport class ToolChangedEventArgs extends ViewerEventArgs {\n  toolName: string;\n  tool: Object;\n  active: boolean;\n  type = Autodesk.Viewing.TOOL_CHANGE_EVENT;\n}\nexport class ViewerInitializedEventArgs extends ViewerEventArgs {\n  type = Autodesk.Viewing.VIEWER_INITIALIZED;\n}\nexport class ViewerResizeEventArgs extends ViewerEventArgs {\n  width: number;\n  height: number;\n  type = Autodesk.Viewing.VIEWER_RESIZE_EVENT;\n}\nexport class ViewerStateRestoredEventArgs extends ViewerEventArgs {\n  value: boolean;\n  type = Autodesk.Viewing.VIEWER_STATE_RESTORED_EVENT;\n}\nexport class ViewerUnInitializedEventArgs extends ViewerEventArgs {\n  type = Autodesk.Viewing.VIEWER_UNINITIALIZED;\n}\n\n/**\n * Base extension that all other extensions can inherit from\n */\nexport abstract class Extension {\n  public static extensionName: string = '';\n\n  protected viewer: Autodesk.Viewing.Viewer3D = undefined;\n  protected extOptions: Autodesk.Viewing.ExtensionOptions = undefined;\n\n  protected eventArgsTypeMap: { [key: string]: Function } = {};\n\n  public static registerExtension(extensionName: string, extension: Object) {\n    Autodesk.Viewing.theExtensionManager.registerExtension(extensionName, extension);\n  }\n\n  public static unregisterExtension(extensionName: string) {\n    Autodesk.Viewing.theExtensionManager.unregisterExtension(extensionName);\n  }\n\n  constructor(viewer: Autodesk.Viewing.Viewer3D,\n              options?: Autodesk.Viewing.ExtensionOptions) {\n    this.viewer = viewer;\n    this.extOptions = options;\n\n    this.registerEventTypes();\n  }\n\n  /** Called by Autodesk extension manager when extension is loaded */\n  public abstract load(): void;\n  /** Called by Autodesk extension manager when extension is unloaded */\n  public abstract unload(): void;\n\n  /** Register event args types that we will cast to 'proper' objects */\n  protected registerEventTypes() {\n    // tslint:disable:max-line-length\n    this.eventArgsTypeMap[Autodesk.Viewing.AGGREGATE_SELECTION_CHANGED_EVENT] = AggregationSelectionChangedEventArgs;\n    this.eventArgsTypeMap[Autodesk.Viewing.ANIMATION_READY_EVENT] = AnimationReadyEventArgs;\n    this.eventArgsTypeMap[Autodesk.Viewing.CAMERA_CHANGE_EVENT] = CameraChangedEventArgs;\n    this.eventArgsTypeMap[Autodesk.Viewing.CUTPLANES_CHANGE_EVENT] = CutplanesChangedEventArgs;\n    this.eventArgsTypeMap[Autodesk.Viewing.ESCAPE_EVENT] = EscapeEventArgs;\n    this.eventArgsTypeMap[Autodesk.Viewing.EXPLODE_CHANGE_EVENT] = ExplodeChangedEventArgs;\n    this.eventArgsTypeMap[Autodesk.Viewing.EXTENSION_LOADED_EVENT] = ExtensionLoadedEventArgs;\n    this.eventArgsTypeMap[Autodesk.Viewing.EXTENSION_UNLOADED_EVENT] = ExtensionUnloadedEventArgs;\n    this.eventArgsTypeMap[Autodesk.Viewing.FINAL_FRAME_RENDERED_CHANGED_EVENT] = FinalFrameRenderedChangedEventArgs;\n    this.eventArgsTypeMap[Autodesk.Viewing.FIT_TO_VIEW_EVENT] = FitToViewEventArgs;\n    this.eventArgsTypeMap[Autodesk.Viewing.FRAGMENTS_LOADED_EVENT] = FragmentsLoadedEventArgs;\n    this.eventArgsTypeMap[Autodesk.Viewing.FULLSCREEN_MODE_EVENT] = FullscreenEventArgs;\n    this.eventArgsTypeMap[Autodesk.Viewing.GEOMETRY_LOADED_EVENT] = GeometryLoadedEventArgs;\n    this.eventArgsTypeMap[Autodesk.Viewing.HIDE_EVENT] = HideEventArgs;\n    this.eventArgsTypeMap[Autodesk.Viewing.HYPERLINK_EVENT] = HyperlinkEventArgs;\n    this.eventArgsTypeMap[Autodesk.Viewing.ISOLATE_EVENT] = IsolateEventArgs;\n    this.eventArgsTypeMap[Autodesk.Viewing.LAYER_VISIBILITY_CHANGED_EVENT] = LayerVisibilityEventArgs;\n    this.eventArgsTypeMap[Autodesk.Viewing.LOAD_MISSING_GEOMETRY] = LoadMissingGeometryEventArgs;\n    this.eventArgsTypeMap[Autodesk.Viewing.MODEL_ROOT_LOADED_EVENT] = ModelRootLoadedEventArgs;\n    this.eventArgsTypeMap[Autodesk.Viewing.MODEL_UNLOADED_EVENT] = ModelUnloadedEventArgs;\n    this.eventArgsTypeMap[Autodesk.Viewing.NAVIGATION_MODE_CHANGED_EVENT] = NavigationModeChangedEventArgs;\n    this.eventArgsTypeMap[Autodesk.Viewing.OBJECT_TREE_CREATED_EVENT] = ObjectTreeCreatedEventArgs;\n    this.eventArgsTypeMap[Autodesk.Viewing.OBJECT_TREE_UNAVAILABLE_EVENT] = ObjectTreeUnavailableEventArgs;\n    this.eventArgsTypeMap[Autodesk.Viewing.PREF_CHANGED_EVENT] = PrefChangedEventArgs;\n    this.eventArgsTypeMap[Autodesk.Viewing.PREF_RESET_EVENT] = PrefResetEventArgs;\n    this.eventArgsTypeMap[Autodesk.Viewing.PROGRESS_UPDATE_EVENT] = ProgressUpdateEventArgs;\n    this.eventArgsTypeMap[Autodesk.Viewing.RENDER_OPTION_CHANGED_EVENT] = RenderOptionChangedEventArgs;\n    this.eventArgsTypeMap[Autodesk.Viewing.RENDER_PRESENTED_EVENT] = RenderPresentedEventArgs;\n    this.eventArgsTypeMap[Autodesk.Viewing.RESET_EVENT] = ResetEventArgs;\n    this.eventArgsTypeMap[Autodesk.Viewing.RESTORE_DEFAULT_SETTINGS_EVENT] = RestoreDefaultSettingsEventArgs;\n    this.eventArgsTypeMap[Autodesk.Viewing.SELECTION_CHANGED_EVENT] = SelectionChangedEventArgs;\n    this.eventArgsTypeMap[Autodesk.Viewing.SHOW_EVENT] = ShowEventArgs;\n    this.eventArgsTypeMap[Autodesk.Viewing.TEXTURES_LOADED_EVENT] = TexturesLoadedEventArgs;\n    this.eventArgsTypeMap[Autodesk.Viewing.TOOL_CHANGE_EVENT] = ToolChangedEventArgs;\n    this.eventArgsTypeMap[Autodesk.Viewing.VIEWER_INITIALIZED] = ViewerInitializedEventArgs;\n    this.eventArgsTypeMap[Autodesk.Viewing.VIEWER_RESIZE_EVENT] = ViewerResizeEventArgs;\n    this.eventArgsTypeMap[Autodesk.Viewing.VIEWER_STATE_RESTORED_EVENT] = ViewerStateRestoredEventArgs;\n    this.eventArgsTypeMap[Autodesk.Viewing.VIEWER_UNINITIALIZED] = ViewerUnInitializedEventArgs;\n    // tslint:enable:max-line-length\n  }\n\n  /** Cast Viewer event args to class */\n  protected castArgs(args: any): any {\n    if (Array.isArray(args)) {\n      return args.map(this.castArgs);\n    }\n\n    if (!args || typeof args !== 'object' || !args.hasOwnProperty('type')) {\n      // Can't cast this object\n      return args;\n    }\n\n    // Create new object of appropriate type\n    const clazz = this.eventArgsTypeMap[args.type];\n    const typedItem = Object.create(clazz.prototype);\n\n    // Cast any properties\n    for (const k of Object.keys(args)) {\n      typedItem[k] = this.castArgs(args[k]);\n    }\n\n    return typedItem;\n  }\n}\n","import { Observable } from 'rxjs/Observable';\nimport { fromEvent } from 'rxjs/observable/fromEvent';\nimport { merge } from 'rxjs/observable/merge';\nimport 'rxjs/add/operator/map';\n\nimport { Extension, ViewerEventArgs } from './extension';\n\nexport class BasicExtension extends Extension {\n  public static extensionName: string = 'BasicExtension';\n  public static debugMessages: boolean = false;\n\n  private static callback: (ext: BasicExtension) => void = null;\n\n  public viewerEvents: Observable<ViewerEventArgs>;\n  protected eventStreams: Observable<ViewerEventArgs>[] = [];\n\n  protected readonly events: string[] = [\n    Autodesk.Viewing.FIT_TO_VIEW_EVENT,\n    Autodesk.Viewing.FULLSCREEN_MODE_EVENT,\n    Autodesk.Viewing.GEOMETRY_LOADED_EVENT,\n    Autodesk.Viewing.HIDE_EVENT,\n    Autodesk.Viewing.ISOLATE_EVENT,\n    Autodesk.Viewing.OBJECT_TREE_CREATED_EVENT,\n    Autodesk.Viewing.OBJECT_TREE_UNAVAILABLE_EVENT,\n    Autodesk.Viewing.RESET_EVENT,\n    Autodesk.Viewing.SELECTION_CHANGED_EVENT,\n    Autodesk.Viewing.SHOW_EVENT,\n  ];\n\n  public static registerExtension(extensionName: string, callback: (ext: BasicExtension) => void) {\n    BasicExtension.callback = callback;\n    super.registerExtension(BasicExtension.extensionName, BasicExtension);\n  }\n\n  public load() {\n    this.events.forEach((eventName) => {\n      const obs = fromEvent(this.viewer, eventName).map(args => this.castArgs(args));\n      this.eventStreams.push(obs);\n    });\n\n    this.viewerEvents = merge(...this.eventStreams);\n\n    if (BasicExtension.debugMessages) console.log(BasicExtension.extensionName, 'loaded!');\n    if (BasicExtension.callback) BasicExtension.callback(this);\n    return true;\n  }\n\n  public unload() {\n    this.eventStreams = [];\n    this.viewerEvents = undefined;\n\n    if (BasicExtension.debugMessages) console.log(BasicExtension.extensionName, 'unloaded!');\n    return true;\n  }\n}\n","import { Injectable } from '@angular/core';\n\ndeclare var document: any;\n\nexport interface ScriptInfoLookup {\n  [key: string]: ScriptInfo;\n}\n\nexport interface ScriptInfo {\n  src: string;\n  loaded: boolean;\n  status?: string;\n}\n\n@Injectable()\nexport class ScriptService {\n\n  private scripts: ScriptInfoLookup = {};\n\n  constructor() {\n    // Nothing to do\n  }\n\n  public load(...urls: string[]): Promise<ScriptInfo[]> {\n    const promises: Promise<ScriptInfo>[] = [];\n\n    urls.forEach((src) => {\n      if (this.scripts[src] && this.scripts[src].loaded) {\n        return;\n      }\n\n      this.scripts[src] = { src, loaded: false };\n      return promises.push(this.loadScript(src));\n    });\n\n    return Promise.all(promises);\n  }\n\n  public loadScript(name: string): Promise<ScriptInfo> {\n    return new Promise((resolve, reject) => {\n      // resolve if already loaded\n      if (this.scripts[name] && this.scripts[name].loaded) {\n        resolve({ src: name, loaded: true, status: 'Already Loaded' });\n        return;\n      }\n\n      // load script\n      const script = document.createElement('script');\n      script.type = 'text/javascript';\n      script.src = this.scripts[name].src;\n\n      if (script.readyState) {  // IE\n        script.onreadystatechange = () => {\n          if (script.readyState === 'loaded' || script.readyState === 'complete') {\n            script.onreadystatechange = null;\n            this.scripts[name].loaded = true;\n\n            resolve({ src: name, loaded: true, status: 'Loaded' });\n          }\n        };\n      } else {  // Others\n        script.onload = () => {\n          this.scripts[name].loaded = true;\n\n          resolve({ src: name, loaded: true, status: 'Loaded' });\n        };\n      }\n\n      script.onerror = (error: any) => resolve({ src: name, loaded: false, status: 'Loaded' });\n      document.getElementsByTagName('head')[0].appendChild(script);\n    });\n  }\n}\n","/// <reference types=\"three\" />\n/// <reference path=\"viewer-typings.d.ts\" />\n\nimport { ChangeDetectionStrategy, Component, EventEmitter, Input, OnDestroy,\n  Output } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/takeUntil';\n\nimport { ScriptService } from '../service/script.service';\nimport {\n  FitToViewEventArgs,\n  FullscreenEventArgs,\n  GeometryLoadedEventArgs,\n  HideEventArgs,\n  IsolateEventArgs,\n  ObjectTreeCreatedEventArgs,\n  ObjectTreeUnavailableEventArgs, ResetEventArgs,\n  SelectionChangedEventArgs,\n  ShowEventArgs,\n  ViewerEventArgs,\n} from '../extensions/extension';\nimport { BasicExtension } from '../extensions/basic-extension';\n\nexport interface DocumentChangedEvent {\n  document: Autodesk.Viewing.Document;\n  viewingApplication: Autodesk.Viewing.ViewingApplication;\n  viewerComponent: ViewerComponent;\n}\n\nexport interface ItemLoadedEvent {\n  item: Autodesk.Viewing.ViewerItem;\n  viewingApplication: Autodesk.Viewing.ViewingApplication;\n  currentViewer: Autodesk.Viewing.Viewer3D;\n  viewerComponent: ViewerComponent;\n}\n\nexport interface ViewingApplicationInitializedEvent {\n  viewingApplication: Autodesk.Viewing.ViewingApplication;\n  viewerComponent: ViewerComponent;\n}\n\nexport interface ViewerOptions {\n  initializerOptions: Autodesk.Viewing.InitializerOptions;\n  viewerApplicationOptions?: Autodesk.Viewing.ViewingApplicationOptions;\n  viewerConfig?: Autodesk.Viewing.ViewerConfig;\n  headlessViewer?: boolean;\n  showFirstViewable?: boolean;\n  onViewerScriptsLoaded?: () => void;\n  onViewingApplicationInitialized: (args: ViewingApplicationInitializedEvent) => void;\n}\n\n\n@Component({\n  selector: 'adsk-forge-viewer',\n  template: \"<div id=\\\"ng2-adsk-forge-viewer-container\\\"></div> \",\n  styles: [\"@import url('https://developer.api.autodesk.com/modelderivative/v2/viewers/style.min.css?v=6.5.*'); \"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ViewerComponent implements OnDestroy {\n  readonly containerId = 'ng2-adsk-forge-viewer-container';\n\n  @Output() public onDocumentChanged = new EventEmitter<DocumentChangedEvent>();\n  @Output() public onItemLoaded = new EventEmitter<ItemLoadedEvent>();\n  @Output() public onError = new EventEmitter<Autodesk.Viewing.ErrorCodes>();\n\n  // Viewer events\n  @Output() public onFitToView = new EventEmitter<FitToViewEventArgs>();\n  @Output() public onFullscreen = new EventEmitter<FullscreenEventArgs>();\n  @Output() public onGeometryLoaded = new EventEmitter<GeometryLoadedEventArgs>();\n  @Output() public onHide = new EventEmitter<HideEventArgs>();\n  @Output() public onIsolate = new EventEmitter<IsolateEventArgs>();\n  @Output() public onObjectTreeCreated = new EventEmitter<ObjectTreeCreatedEventArgs>();\n  @Output() public onObjectTreeUnavailable = new EventEmitter<ObjectTreeUnavailableEventArgs>();\n  @Output() public onReset = new EventEmitter<ResetEventArgs>();\n  @Output() public onSelectionChanged = new EventEmitter<SelectionChangedEventArgs>();\n  @Output() public onShow = new EventEmitter<ShowEventArgs>();\n\n  // Debugging\n  @Input() public showDebugMessages: boolean = false;\n\n  private _viewerOptions: ViewerOptions = null;\n  private viewerInitialized = false;\n  private viewerApp: Autodesk.Viewing.ViewingApplication;\n  private documentId: string;\n  private unsubscribe: Subject<boolean> = new Subject();\n  private basicExt: BasicExtension;\n\n  /**\n   * Helper to allow callers to specify documentId with or without the required urn: prefix\n   */\n  private static verifyUrn(documentId: string): string {\n    return (documentId.startsWith('urn:')) ? documentId : `urn:${documentId}`;\n  }\n\n  constructor(private script: ScriptService) { }\n\n  @Input() public set viewerOptions(options: ViewerOptions) {\n    if (!this.viewerInitialized && options) {\n      this._viewerOptions = options;\n      void this.initialiseApplication();\n    }\n  }\n\n  public get viewerOptions() {\n    return this._viewerOptions;\n  }\n\n  ngOnDestroy() {\n    this.unregisterBasicExtension();\n\n    if (this.viewerApp) {\n      const viewer = this.viewerApp.getCurrentViewer();\n      if (viewer) {\n        viewer.tearDown();\n        viewer.uninitialize();\n      }\n    }\n\n    this.viewerApp = null;\n    this.viewerInitialized = false;\n\n    this.unsubscribe.next();\n    this.unsubscribe.complete();\n  }\n\n  /**\n   * Helper method to get some default viewer options\n   */\n  public getDefaultViewerOptions(\n    onViewingApplicationInitialized: (args: ViewingApplicationInitializedEvent) => void,\n    getAccessToken: (onGetAccessToken: (token: string, expire: number) => void) => void,\n  ): ViewerOptions {\n    return {\n      initializerOptions: {\n        env: 'AutodeskProduction',\n        getAccessToken,\n      },\n      onViewingApplicationInitialized,\n    };\n  }\n\n  /**\n   * Get a reference to the current viewing application\n   */\n  public get ViewerApplication() {\n    return this.viewerApp;\n  }\n\n  /**\n   * Get a reference to the current 3D viewer\n   */\n  public get Viewer3D() {\n    return this.viewerApp.getCurrentViewer();\n  }\n\n  /**\n   * Get the document urn that has been loaded\n   */\n  public get DocumentId() {\n    return this.documentId;\n  }\n\n  /**\n   * Set the document urn, which triggers the viewer to load the document\n   */\n  public set DocumentId(value: string) {\n    this.documentId = value;\n    this.loadDocument(this.documentId);\n  }\n\n  public get basicExtension() {\n    return this.basicExt;\n  }\n\n  public get extensionEvents(): Observable<ViewerEventArgs> | null {\n    if (this.basicExt) {\n      return this.basicExt.viewerEvents;\n    }\n  }\n\n  public selectItem(item: Autodesk.Viewing.ViewerItem|Autodesk.Viewing.BubbleNode) {\n    this.viewerApp.selectItem(item, this.onItemLoadSuccess.bind(this), this.onItemLoadFail.bind(this));\n  }\n\n  /**\n   * We don't bundle Autodesk's scripts with the component, and we don't really want users to have\n   * to add the scripts to their index.html pages. So we'll load them when required.\n   */\n  private loadScripts(): Promise<void> {\n    return this.script.load(\n      'https://developer.api.autodesk.com/modelderivative/v2/viewers/viewer3D.min.js?v=6.5.*',\n    )\n      .then((data) => {\n        this.log('script loaded ', data);\n      })\n      .catch(error => this.error(error));\n  }\n\n  /**\n   * Initialises a ViewingApplication\n   */\n  private async initialiseApplication() {\n    // Load scripts first\n    await this.loadScripts();\n    if (this.viewerOptions.onViewerScriptsLoaded) this.viewerOptions.onViewerScriptsLoaded();\n\n    // Check if the viewer has already been initialised - this isn't the nicest, but we've set the env in our\n    // options above so we at least know that it was us who did this!\n    if (!Autodesk.Viewing.Private.env) {\n      Autodesk.Viewing.Initializer(this.viewerOptions.initializerOptions, () => {\n        this.initialized();\n      });\n    } else {\n      // We need to give an initialised viewing application a tick to allow the DOM element\n      // to be established before we re-draw\n      setTimeout(() => {\n        this.initialized();\n      });\n    }\n  }\n\n  private initialized() {\n    this.viewerApp = new Autodesk.Viewing.ViewingApplication(this.containerId,\n                                                             this.viewerOptions.viewerApplicationOptions);\n\n    // Register an extension to help us raise events\n    const extName = this.registerBasicExtension();\n    const config = this.addBasicExtensionConfig(extName);\n\n    // Register a viewer with the application (passign through any additional config)\n    this.viewerApp.registerViewer(\n      this.viewerApp.k3D,\n      (this.viewerOptions.headlessViewer) ? Autodesk.Viewing.Viewer3D : Autodesk.Viewing.Private.GuiViewer3D,\n      config,\n    );\n\n    // Viewer is ready - scripts are loaded and we've create a new viewing application\n    this.viewerInitialized = true;\n    this.viewerOptions.onViewingApplicationInitialized({ viewingApplication: this.viewerApp, viewerComponent: this });\n  }\n\n  /**\n   * Loads a model in to the viewer via it's urn\n   */\n  private loadDocument(documentId: string) {\n    if (!documentId) {\n      return;\n    }\n\n    // Add urn: to the beginning of document id if needed\n    this.viewerApp.loadDocument(ViewerComponent.verifyUrn(documentId),\n                                this.onDocumentLoadSuccess.bind(this),\n                                this.onDocumentLoadFailure.bind(this));\n  }\n\n  /**\n   * Document successfully loaded\n   */\n  private onDocumentLoadSuccess(document: Autodesk.Viewing.Document) {\n    if (!this.viewerApp.bubble) return;\n\n    // Emit an event so the caller can do something\n    // TODO: config option to specify which viewable to display (how?)\n    this.onDocumentChanged.emit({ document, viewingApplication: this.viewerApp, viewerComponent: this });\n\n    if (this.viewerOptions.showFirstViewable === undefined || this.viewerOptions.showFirstViewable) {\n      // This will be the default behaviour -- show the first viewable\n      // We could still make use of Document.getSubItemsWithProperties()\n      // However, when using a ViewingApplication, we have access to the **bubble** attribute,\n      // which references the root node of a graph that wraps each object from the Manifest JSON.\n      const viewables = this.viewerApp.bubble.search(Autodesk.Viewing.BubbleNode.MODEL_NODE);\n\n      if (viewables && viewables.length > 0) {\n        this.viewerApp.selectItem(viewables[0].data, this.onItemLoadSuccess.bind(this), this.onItemLoadFail.bind(this));\n      }\n    }\n  }\n\n  /**\n   * Failed to load document\n   */\n  private onDocumentLoadFailure(errorCode: Autodesk.Viewing.ErrorCodes) {\n    this.error('onDocumentLoadFailure() - errorCode:' + errorCode);\n    this.onError.emit(errorCode);\n  }\n\n  /**\n   * View from the document was successfully loaded\n   */\n  private onItemLoadSuccess(viewer: Autodesk.Viewing.Viewer3D, item: Autodesk.Viewing.ViewerItem) {\n    this.log('onItemLoadSuccess()', viewer, item);\n\n    this.onItemLoaded.emit({\n      item,\n      currentViewer: viewer,\n      viewingApplication: this.viewerApp,\n      viewerComponent: this,\n    });\n  }\n\n  /**\n   * Failed to load a view from the document\n   */\n  private onItemLoadFail(errorCode: Autodesk.Viewing.ErrorCodes) {\n    this.error('onItemLoadFail() - errorCode:' + errorCode);\n    this.onError.emit(errorCode);\n  }\n\n  /**\n   * Register our BasicExtension with the Forge Viewer\n   */\n  private registerBasicExtension(): string {\n    BasicExtension.registerExtension(BasicExtension.extensionName, this.extensionLoaded.bind(this));\n    return BasicExtension.extensionName;\n  }\n\n  /**\n   * Subscript to BasicExtension events when the extension has been\n   * succesfully loaded by the viewer.\n   */\n  private extensionLoaded(ext: BasicExtension) {\n    this.basicExt = ext;\n    ext.viewerEvents\n      .takeUntil(this.unsubscribe)\n      .subscribe((item: ViewerEventArgs) => {\n        this.log(item);\n\n        if (item instanceof FitToViewEventArgs) {\n          this.onFitToView.emit(item);\n        } else if (item instanceof FullscreenEventArgs) {\n          this.onFullscreen.emit(item);\n        } else if (item instanceof GeometryLoadedEventArgs) {\n          this.onGeometryLoaded.emit(item);\n        } else if (item instanceof HideEventArgs) {\n          this.onHide.emit(item);\n        } else if (item instanceof IsolateEventArgs) {\n          this.onIsolate.emit(item);\n        } else if (item instanceof ObjectTreeCreatedEventArgs) {\n          this.onObjectTreeCreated.emit(item);\n        } else if (item instanceof ObjectTreeUnavailableEventArgs) {\n          this.onObjectTreeUnavailable.emit(item);\n        } else if (item instanceof ResetEventArgs) {\n          this.onReset.emit(item);\n        } else if (item instanceof SelectionChangedEventArgs) {\n          this.onSelectionChanged.emit(item);\n        } else if (item instanceof ShowEventArgs) {\n          this.onShow.emit(item);\n        }\n      });\n  }\n\n  private unregisterBasicExtension() {\n    BasicExtension.unregisterExtension(BasicExtension.extensionName);\n    this.basicExt = null;\n  }\n\n  /**\n   * Add list of extensions to the viewer config that has been provided\n   * The allows the user to register their own extensions.\n   */\n  private addBasicExtensionConfig(extName: string): Autodesk.Viewing.ViewerConfig {\n    const config: Autodesk.Viewing.ViewerConfig = Object.assign(\n      {},\n      this.viewerOptions.viewerConfig,\n      { extensions: [] },\n    );\n\n    // We will always load our basic extension with any others specified by the caller\n    if (this.viewerOptions.viewerConfig && this.viewerOptions.viewerConfig.extensions) {\n      config.extensions = [...this.viewerOptions.viewerConfig.extensions, extName];\n    } else {\n      config.extensions = [extName];\n    }\n\n    return config;\n  }\n\n  private log(message?: any, ...optionalParams: any[]) {\n    if (!this.showDebugMessages) return;\n    console.log(message, optionalParams);\n  }\n\n  private error(message?: any, ...optionalParams: any[]) {\n    if (!this.showDebugMessages) return;\n    console.error(message, optionalParams);\n  }\n}\n","import { Component, Input, OnChanges } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { DomSanitizer, SafeUrl } from '@angular/platform-browser';\n\nexport interface ThumbnailOptions {\n  getAccessToken?: (onGetAccessToken: (token: string, expire: number) => void) => void;\n  documentId: string;\n  width?: 100|200|400;\n  height?: 100|200|400;\n  defaultImageSrc?: string;\n}\n\n@Component({\n  selector: 'adsk-forge-thumbnail',\n  template: \"<img [src]=\\\"imageSrc\\\" /> \",\n})\nexport class ThumbnailComponent implements OnChanges {\n  @Input() public thumbnailOptions: ThumbnailOptions;\n  public imageSrc: SafeUrl;\n\n  private token: string;\n  private expire: number;\n\n  constructor(\n    private http: HttpClient,\n    private sanitizer: DomSanitizer,\n  ) { }\n\n  public ngOnChanges() {\n    if (this.thumbnailOptions) {\n      this.setImageSrc(this.thumbnailOptions.defaultImageSrc);\n      this.getThumbnail(this.thumbnailOptions.documentId);\n    }\n  }\n\n  private getThumbnail(documentId: string) {\n    let url = `https://developer.api.autodesk.com/modelderivative/v2/designdata/${documentId}/thumbnail`;\n\n    let opts: string = '';\n    if (this.thumbnailOptions.width) opts += `width=${this.thumbnailOptions.width}&`;\n    if (this.thumbnailOptions.height) opts += `height=${this.thumbnailOptions.height}&`;\n    if (opts) url += `?${opts.slice(0, -1)}`;\n\n    this.thumbnailOptions.getAccessToken(this.setAccessToken.bind(this));\n    const headers = {\n      Authorization: `Bearer ${this.token}`,\n      'Content-Type': 'image/png',\n    };\n\n    this.http.get(url, { headers, responseType: 'arraybuffer' })\n      .subscribe(\n        data => (data) ? this.setImageSrc(`data:image/png;base64,${this.toBase64(data)}`)\n          : this.setImageSrc(),\n        error => this.setImageSrc(),\n      );\n  }\n\n  private setAccessToken(accessToken: string, expiryTime: number) {\n    this.token = accessToken;\n    this.expire = expiryTime;\n  }\n\n  private toBase64(data: ArrayBuffer) {\n    return btoa(String.fromCharCode(...new Uint8Array(data) as any));\n  }\n\n  private setImageSrc(src: string = '') {\n    let imageSrc = '';\n\n    if (src) {\n      imageSrc = src;\n    } else {\n      imageSrc = (this.thumbnailOptions && this.thumbnailOptions.defaultImageSrc) || '';\n    }\n\n    this.imageSrc = this.sanitizer.bypassSecurityTrustUrl(imageSrc);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { ViewerComponent } from './component/viewer.component';\nimport { ThumbnailComponent } from './component/thumbnail.component';\nimport { ScriptService } from './service/script.service';\n\n@NgModule({\n  declarations: [ViewerComponent, ThumbnailComponent],\n  imports: [HttpClientModule],\n  exports: [ViewerComponent, ThumbnailComponent],\n  providers: [ScriptService],\n})\nexport class ViewerModule { }\n","export * from './src/extensions/extension';\nexport { BasicExtension } from './src/extensions/basic-extension';\nexport { ScriptService } from './src/service/script.service';\nexport { ViewerModule } from './src/module';\n\nexport * from './src/component/viewer.component';\nexport * from './src/component/thumbnail.component';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}